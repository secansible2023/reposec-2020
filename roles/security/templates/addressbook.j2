{% if 'NTL_CD4' in inventory_hostname %}
   security {
        address-book {
            global {
                {% for source_address in source_addresses.split('\n') %}
                address {{ source_address }} {{ source_address }};
                address-set blacklist_ansible_ntl {
                    address {{ source_address }};
                }
                {% endfor %}
            }
        }
    }
{% elif 'TTN_CD4' in inventory_hostname %}
   security {
        address-book {
            global {
                {% for source_address in source_addresses.split('\n') %}
                address {{ source_address }} {{ source_address }};
                address-set blacklist_ansible_ttn {
                    address {{ source_address }};
                }
                {% endfor %}
            }
        }
    }
{% elif 'NTL_2019' in inventory_hostname %}
    security {
        zones {
            security-zone INTERNET_DHIT {
                {% for source_address in source_addresses.split('\n') %}
                address-book {
                    address {{ source_address }} {{ source_address }};
                    address-set blacklist_ansible_ntl {
                        address {{ source_address }};       
                    }
                }
                {% endfor %}
            }
        }
    }
{% elif 'TTN_2019' in inventory_hostname %}
    security {
        address-book {
            global {
                {% for source_address in source_addresses.split('\n') %}
                address {{ source_address }} {{ source_address }};
                address-set blacklist_ansible_ttn {
                    address {{ source_address }};
                }
                {% endfor %}
            }
        }
    }
{% elif 'NTL_2021' in inventory_hostname %}
    # Do something when the hostname contains 'NTL'
    security {
        {% for source_address in source_addresses.split('\n') %}
        address-book {
            INTERNET_NTL {
                address {{ source_address }} {{ source_address }};
                address-set blacklist_ansible_ntl {
                    address {{ source_address }};
                }
            }
        }
        {% endfor %}
    }
{% elif 'TTN_2021' in inventory_hostname %}
    # Do something else hostname contains 'TTN'
    security {
        {% for source_address in source_addresses.split('\n') %}
        address-book {
            INTERNET_TTN {
                address {{ source_address }} {{ source_address }};
                address-set blacklist_ansible_ttn {
                    address {{ source_address }};
                }
            }
        }
        {% endfor %}
    }
{% endif %}
